[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ariadne-lambda"
version = "0.3.1"
description = 'This package extends the Ariadne library by adding a GraphQL HTTP handler designed for use in AWS Lambda environments.'
readme = "README.md"
requires-python = ">=3.8"
license = { file = "LICENSE" }
keywords = []
authors = [
  { name = "Mirumee Software", email = "it@mirumee.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "ariadne>=0.23.0,<0.24.0",
  "aws-lambda-powertools>=2.35.1,<3.0.0",
  "jmespath",
  "pydantic>=2.4.0,<3.0.0",
]

[project.urls]
Documentation = "https://github.com/mirumee/ariadne-lambda#readme"
Issues = "https://github.com/mirumee/ariadne-lambda/issues"
Source = "https://github.com/mirumee/ariadne-lambda"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
  "pytest-asyncio",
  "ruff",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:ariadne_lambda tests}"

[tool.coverage.run]
source_pkgs = ["ariadne_lambda", "tests"]
branch = true
parallel = true


[tool.coverage.paths]
ariadne_lambda = ["ariadne_lambda"]
tests = ["tests", "*/ariadne-lambda/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 99
target-version = "py312"

# rules: https://beta.ruff.rs/docs/rules
# F - pyflakes
# E - pycodestyle
# G - flake8-logging-format
# I - isort
# N - pep8-naming
# Q - flake8-quotes
# UP - pyupgrade
# C90 - mccabe (complexity)
# T20 - flake8-print
# TID - flake8-tidy-imports

[tool.ruff.lint]
select = ["E", "F", "G", "I", "N", "Q", "UP", "C90", "T20", "TID"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"
